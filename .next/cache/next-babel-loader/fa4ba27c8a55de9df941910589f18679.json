{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yongh/Documents/web_dev/hello-next/pages/news.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Head from \"next/head\";\nimport Layout from \"../components/Layout\"; // import fetch from \"isomorphic-fetch\";\n\nvar News = function News(_ref) {\n  var news = _ref.news;\n  return __jsx(Layout, {\n    title: \"news\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"List of News\")));\n};\n\n_c = News;\nNews.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var data, searchQuery, searchUrl;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          searchQuery = 'star wars';\n          searchUrl = \"https://api.themoviedb.org/3/search/movie?query=\".concat(searchQuery, \"&api_key=224502cedb2aea2828098f3724fd0b0c\");\n          fetch(searchUrl).then(function (res) {\n            return res.json();\n          }).then(function (data) {\n            setmovie(data.results);\n            setLoading(false);\n            console.log(data.results);\n          })[\"catch\"](function (err) {\n            return console.log(err);\n          });\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["/Users/yongh/Documents/web_dev/hello-next/pages/news.js"],"names":["Link","Head","Layout","News","news","getInitialProps","searchQuery","searchUrl","fetch","then","res","json","data","setmovie","results","setLoading","console","log","err"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAY;AAAA,MAAVC,IAAU,QAAVA,IAAU;AACvB,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CADF;AAOD,CARD;;KAAMD,I;AAUNA,IAAI,CAACE,eAAL,yEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfC,UAAAA,WAFe,GAED,WAFC;AAGfC,UAAAA,SAHe,6DAGgDD,WAHhD;AAKrBE,UAAAA,KAAK,CAACD,SAAD,CAAL,CACCE,IADD,CACM,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,WADT,EAECF,IAFD,CAEM,UAAAG,IAAI,EAAI;AACZC,YAAAA,QAAQ,CAACD,IAAI,CAACE,OAAN,CAAR;AACAC,YAAAA,UAAU,CAAC,KAAD,CAAV;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACE,OAAjB;AACD,WAND,WAOO,UAAAI,GAAG;AAAA,mBAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAJ;AAAA,WAPV;AALqB,2CAcd;AACLN,YAAAA,IAAI,EAAJA;AADK,WAdc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAmBA,eAAeT,IAAf","sourcesContent":["import Link from 'next/link';\nimport Head from \"next/head\";\nimport Layout from \"../components/Layout\";\n// import fetch from \"isomorphic-fetch\";\n\nconst News = ({news}) => {\n  return (\n    <Layout title=\"news\">\n      <div>\n        <h2>List of News</h2>\n      </div>\n    </Layout>\n  )\n}\n\nNews.getInitialProps = async () => {\n  let data;\n  const searchQuery = 'star wars';\n  const searchUrl = `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&api_key=224502cedb2aea2828098f3724fd0b0c`;\n\n  fetch(searchUrl)\n  .then(res => res.json())\n  .then(data => {\n    setmovie(data.results)\n    setLoading(false)\n    console.log(data.results)\n  })\n  .catch(err => console.log(err))\n\n  return {\n    data\n  };\n}\n\nexport default News;"]},"metadata":{},"sourceType":"module"}