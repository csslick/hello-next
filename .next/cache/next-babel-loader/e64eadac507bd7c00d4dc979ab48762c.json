{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yongh/Documents/web_dev/hello-next/pages/news.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Head from \"next/head\";\nimport Layout from \"../components/Layout\";\n\nvar Movies = function Movies(_ref) {\n  _s();\n\n  var Movies = _ref.Movies;\n\n  // state\n  var _useState = useState([]),\n      movie = _useState[0],\n      setmovie = _useState[1];\n\n  var _useState2 = useState('star wars'),\n      searchQuery = _useState2[0],\n      setSearchQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  useEffect(function () {\n    fetchMovie();\n  }, []);\n  return __jsx(Layout, {\n    title: \"Movies\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"List of Movies\")));\n};\n\n_s(Movies, \"OMrAqkiiq9uupSyo+O0QX0mt/eQ=\");\n\n_c = Movies;\n\nfetchMovie = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var data, searchQuery, searchUrl;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            searchQuery = 'star wars';\n            searchUrl = \"https://api.themoviedb.org/3/search/movie?query=\".concat(searchQuery, \"&api_key=224502cedb2aea2828098f3724fd0b0c\");\n            fetch(searchUrl).then(function (res) {\n              return res.json();\n            }).then(function (data) {\n              // setmovie(data.results)\n              // setLoading(false)\n              console.log(data.results);\n            })[\"catch\"](function (err) {\n              return console.log(err);\n            });\n            return _context.abrupt(\"return\", {\n              data: data\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchMovie() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/yongh/Documents/web_dev/hello-next/pages/news.js"],"names":["React","useState","useEffect","Link","Head","Layout","Movies","movie","setmovie","searchQuery","setSearchQuery","loading","setLoading","fetchMovie","searchUrl","fetch","then","res","json","data","console","log","results","err"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,MAAM,GAAG,sBAAc;AAAA;;AAAA,MAAZA,MAAY,QAAZA,MAAY;;AAC3B;AAD2B,kBAEDL,QAAQ,CAAC,EAAD,CAFP;AAAA,MAEpBM,KAFoB;AAAA,MAEbC,QAFa;;AAAA,mBAGWP,QAAQ,CAAC,WAAD,CAHnB;AAAA,MAGpBQ,WAHoB;AAAA,MAGPC,cAHO;;AAAA,mBAIGT,QAAQ,CAAC,KAAD,CAJX;AAAA,MAIpBU,OAJoB;AAAA,MAIXC,UAJW;;AAM3BV,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,UAAU;AAEX,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,CADF;AAOD,CAlBD;;GAAMP,M;;KAAAA,M;;AAoBNO,UAAU;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAELJ,YAAAA,WAFK,GAES,WAFT;AAGLK,YAAAA,SAHK,6DAG0DL,WAH1D;AAKXM,YAAAA,KAAK,CAACD,SAAD,CAAL,CACCE,IADD,CACM,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,aADT,EAECF,IAFD,CAEM,UAAAG,IAAI,EAAI;AACZ;AACA;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAjB;AACD,aAND,WAOO,UAAAC,GAAG;AAAA,qBAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,aAPV;AALW,6CAcJ;AACLJ,cAAAA,IAAI,EAAJA;AADK,aAdI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA;AAAA;AAAA;AAAA,GAAV;;AAmBA,eAAeb,MAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport Link from 'next/link';\nimport Head from \"next/head\";\nimport Layout from \"../components/Layout\";\n\nconst Movies = ({Movies}) => {\n  // state\n  const [movie, setmovie] = useState([])\n  const [searchQuery, setSearchQuery] = useState('star wars')\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    fetchMovie();\n\n  }, []) \n\n  return (\n    <Layout title=\"Movies\">\n      <div>\n        <h2>List of Movies</h2>\n      </div>\n    </Layout>\n  )\n}\n\nfetchMovie = async () => {\n  let data;\n  const searchQuery = 'star wars';\n  const searchUrl = `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&api_key=224502cedb2aea2828098f3724fd0b0c`;\n\n  fetch(searchUrl)\n  .then(res => res.json())\n  .then(data => {\n    // setmovie(data.results)\n    // setLoading(false)\n    console.log(data.results)\n  })\n  .catch(err => console.log(err))\n\n  return {\n    data\n  };\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}