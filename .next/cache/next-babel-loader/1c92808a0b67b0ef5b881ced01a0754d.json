{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yongh/Documents/web_dev/hello-next/pages/news.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Head from \"next/head\";\nimport Layout from \"../components/Layout\";\nimport fetch from \"isomorphic-fetch\";\n\nvar News = function News(_ref) {\n  var news = _ref.news;\n  return __jsx(Layout, {\n    title: \"news\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"List of News\")));\n};\n\n_c = News;\nNews.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var data, searchQuery, searchUrl, res;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          searchQuery = 'star wars';\n          searchUrl = \"https://api.themoviedb.org/3/search/movie?query=\".concat(searchQuery, \"&api_key=224502cedb2aea2828098f3724fd0b0c\");\n          _context.prev = 2;\n          _context.next = 5;\n          return fetch();\n\n        case 5:\n          res = _context.sent;\n          _context.next = 8;\n          return res.json();\n\n        case 8:\n          data = _context.sent;\n          console.log(data);\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](2);\n          console.log('Error', _context.t0);\n          data = [];\n\n        case 16:\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[2, 12]]);\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["/Users/yongh/Documents/web_dev/hello-next/pages/news.js"],"names":["Link","Head","Layout","fetch","News","news","getInitialProps","searchQuery","searchUrl","res","json","data","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAY;AAAA,MAAVC,IAAU,QAAVA,IAAU;AACvB,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CADF;AAOD,CARD;;KAAMD,I;AAUNA,IAAI,CAACE,eAAL,yEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfC,UAAAA,WAFe,GAED,WAFC;AAGfC,UAAAA,SAHe,6DAGgDD,WAHhD;AAAA;AAAA;AAAA,iBAMDJ,KAAK,EANJ;;AAAA;AAMbM,UAAAA,GANa;AAAA;AAAA,iBAONA,GAAG,CAACC,IAAJ,EAPM;;AAAA;AAOnBC,UAAAA,IAPmB;AAQnBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AARmB;AAAA;;AAAA;AAAA;AAAA;AAUnBC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAF,UAAAA,IAAI,GAAG,EAAP;;AAXmB;AAAA,2CAcd;AACLA,YAAAA,IAAI,EAAJA;AADK,WAdc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import Link from 'next/link';\nimport Head from \"next/head\";\nimport Layout from \"../components/Layout\";\nimport fetch from \"isomorphic-fetch\";\n\nconst News = ({news}) => {\n  return (\n    <Layout title=\"news\">\n      <div>\n        <h2>List of News</h2>\n      </div>\n    </Layout>\n  )\n}\n\nNews.getInitialProps = async () => {\n  let data;\n  const searchQuery = 'star wars';\n  const searchUrl = `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&api_key=224502cedb2aea2828098f3724fd0b0c`;\n\n  try {\n    const res = await fetch();\n    data = await res.json();\n    console.log(data)\n  } catch(err) {\n    console.log('Error', err)\n    data = []\n  }\n\n  return {\n    data\n  };\n}"]},"metadata":{},"sourceType":"module"}