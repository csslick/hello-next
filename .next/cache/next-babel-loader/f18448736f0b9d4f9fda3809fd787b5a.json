{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yongh/Documents/web_dev/hello-next/pages/movies_ssr.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Head from \"next/head\";\nimport Layout from \"../components/Layout\";\n\nvar Movies = function Movies(_ref) {\n  _s();\n\n  var movies = _ref.movies;\n\n  // state\n  // const [movie, setmovie] = useState([])\n  var _useState = useState('star wars'),\n      searchQuery = _useState[0],\n      setSearchQuery = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var searchQuery2 = 'star wars'; // fetch movie - 함수는 마운트 될때 실행됨\n\n  var api_key = '224502cedb2aea2828098f3724fd0b0c';\n  var url = 'https://api.themoviedb.org/3/movie/550?api_key=224502cedb2aea2828098f3724fd0b0c';\n  var movieList = 'https://api.themoviedb.org/4/list/3?page=1&api_key=224502cedb2aea2828098f3724fd0b0c';\n  var imgUrl = 'https://image.tmdb.org/t/p/w300';\n  var searchUrl = \"https://api.themoviedb.org/3/search/movie?query=\".concat(searchQuery2, \"&api_key=224502cedb2aea2828098f3724fd0b0c\");\n  var url2 = 'http://hn.algolia.com/api/v1/search?query=react';\n  var trandUrl = \"https://api.themoviedb.org/3/trending/all/day?api_key=\".concat(api_key);\n  useEffect(function () {// fetchMovie();\n  }, []);\n\n  var showMovie = function showMovie() {\n    return (// <p>\n      //   { JSON.stringify(movies) }\n      //     { console.log(movies) }\n      // </p>\n      movies.map(function (item, i) {\n        return __jsx(\"div\", {\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }\n        }, __jsx(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }\n        }, i, \". \", item.original_title), __jsx(\"img\", {\n          src: imgUrl + item.poster_path,\n          alt: item.poster_path,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }\n        }), __jsx(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }\n        }, i, \". \", item.overview));\n      })\n    );\n  };\n\n  return __jsx(Layout, {\n    title: \"Movies\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"List of Movies\"), showMovie()));\n}; // SSR(콘텐츠를 Server Side Rendering)\n\n\n_s(Movies, \"BmAserlm82aDkKKGUqpwTmsP8SM=\");\n\n_c = Movies;\nMovies.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var movies, api_key, trandUrl;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          api_key = '224502cedb2aea2828098f3724fd0b0c';\n          trandUrl = \"https://api.themoviedb.org/3/trending/all/day?api_key=\".concat(api_key);\n          _context.next = 4;\n          return fetch(trandUrl).then(function (res) {\n            return res.json();\n          }).then(function (data) {\n            movies = data; // console.log(movies)\n          })[\"catch\"](function (err) {\n            console.log(err);\n            movies = [];\n          });\n\n        case 4:\n          return _context.abrupt(\"return\", {\n            movies: movies.results\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/yongh/Documents/web_dev/hello-next/pages/movies_ssr.js"],"names":["React","useState","useEffect","Link","Head","Layout","Movies","movies","searchQuery","setSearchQuery","loading","setLoading","searchQuery2","api_key","url","movieList","imgUrl","searchUrl","url2","trandUrl","showMovie","map","item","i","original_title","poster_path","overview","getInitialProps","fetch","then","res","json","data","err","console","log","results"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAsB;AAAA;;AAAA,MAAZC,MAAY,QAApBA,MAAoB;;AACnC;AACA;AAFmC,kBAGGN,QAAQ,CAAC,WAAD,CAHX;AAAA,MAG5BO,WAH4B;AAAA,MAGfC,cAHe;;AAAA,mBAILR,QAAQ,CAAC,KAAD,CAJH;AAAA,MAI5BS,OAJ4B;AAAA,MAInBC,UAJmB;;AAKnC,MAAMC,YAAY,GAAG,WAArB,CALmC,CAOnC;;AACA,MAAMC,OAAO,GAAG,kCAAhB;AACA,MAAMC,GAAG,GAAG,iFAAZ;AACA,MAAMC,SAAS,GAAG,qFAAlB;AACA,MAAMC,MAAM,GAAG,iCAAf;AACA,MAAMC,SAAS,6DAAsDL,YAAtD,8CAAf;AACA,MAAMM,IAAI,GAAG,iDAAb;AACA,MAAMC,QAAQ,mEAA4DN,OAA5D,CAAd;AAEAX,EAAAA,SAAS,CAAC,YAAM,CACd;AAED,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAMkB,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,WACE;AACA;AACA;AACA;AAEAb,MAAAA,MAAM,CAACc,GAAP,CAAW,UAACC,IAAD,EAAOC,CAAP,EAAa;AACtB,eACE;AAAK,UAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIA,CAAJ,QAASD,IAAI,CAACE,cAAd,CADF,EAEE;AAAK,UAAA,GAAG,EAAER,MAAM,GAACM,IAAI,CAACG,WAAtB;AAAmC,UAAA,GAAG,EAAEH,IAAI,CAACG,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIF,CAAJ,QAASD,IAAI,CAACI,QAAd,CAHF,CADF;AAOD,OARD;AANF;AAgBD,GAjBD;;AAmBA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEIN,SAAS,EAFb,CADF,CADF;AAQD,CAhDD,C,CAkDA;;;GAlDMd,M;;KAAAA,M;AAmDNA,MAAM,CAACqB,eAAP,yEAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjBd,UAAAA,OAFiB,GAEP,kCAFO;AAGjBM,UAAAA,QAHiB,mEAGmDN,OAHnD;AAAA;AAAA,iBAKjBe,KAAK,CAACT,QAAD,CAAL,CACHU,IADG,CACE,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,WADL,EAEHF,IAFG,CAEE,UAAAG,IAAI,EAAI;AACZzB,YAAAA,MAAM,GAAGyB,IAAT,CADY,CAEZ;AACD,WALG,WAMG,UAAAC,GAAG,EAAI;AACZC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA1B,YAAAA,MAAM,GAAG,EAAT;AACD,WATG,CALiB;;AAAA;AAAA,2CAgBhB;AACLA,YAAAA,MAAM,EAAEA,MAAM,CAAC6B;AADV,WAhBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AAqBA,eAAe9B,MAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport Link from 'next/link';\nimport Head from \"next/head\";\nimport Layout from \"../components/Layout\";\n\nconst Movies = ({movies: movies}) => {\n  // state\n  // const [movie, setmovie] = useState([])\n  const [searchQuery, setSearchQuery] = useState('star wars')\n  const [loading, setLoading] = useState(false)\n  const searchQuery2 = 'star wars'\n\n  // fetch movie - 함수는 마운트 될때 실행됨\n  const api_key = '224502cedb2aea2828098f3724fd0b0c';\n  const url = 'https://api.themoviedb.org/3/movie/550?api_key=224502cedb2aea2828098f3724fd0b0c';\n  const movieList = 'https://api.themoviedb.org/4/list/3?page=1&api_key=224502cedb2aea2828098f3724fd0b0c'\n  const imgUrl = 'https://image.tmdb.org/t/p/w300'\n  const searchUrl = `https://api.themoviedb.org/3/search/movie?query=${searchQuery2}&api_key=224502cedb2aea2828098f3724fd0b0c`\n  const url2 = 'http://hn.algolia.com/api/v1/search?query=react'\n  const trandUrl = `https://api.themoviedb.org/3/trending/all/day?api_key=${api_key}`\n\n  useEffect(() => {\n    // fetchMovie();\n\n  }, []) \n\n  const showMovie = () => {\n    return (\n      // <p>\n      //   { JSON.stringify(movies) }\n      //     { console.log(movies) }\n      // </p>\n\n      movies.map((item, i) => {\n        return (\n          <div key={i}>\n            <p>{i}. {item.original_title}</p>\n            <img src={imgUrl+item.poster_path} alt={item.poster_path} />\n            <p>{i}. {item.overview}</p>\n          </div>\n        )\n      })\n    )\n  }\n  \n  return (\n    <Layout title=\"Movies\">\n      <div>\n        <h2>List of Movies</h2>\n        { showMovie() }\n      </div>\n    </Layout>\n  )\n}\n\n// SSR(콘텐츠를 Server Side Rendering)\nMovies.getInitialProps = async () => {\n  let movies;\n  const api_key = '224502cedb2aea2828098f3724fd0b0c';\n  const trandUrl = `https://api.themoviedb.org/3/trending/all/day?api_key=${api_key}`\n\n  await fetch(trandUrl)\n    .then(res => res.json())\n    .then(data => {\n      movies = data;\n      // console.log(movies)\n    })\n    .catch(err => {\n      console.log(err)\n      movies = []\n    })\n\n  return { \n    movies: movies.results\n  }\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}