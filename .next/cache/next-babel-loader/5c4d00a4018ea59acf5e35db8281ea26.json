{"ast":null,"code":"var _jsxFileName = \"/Users/yongh/Documents/web_dev/hello-next/pages/movies_ssr.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Head from \"next/head\";\nimport Layout from \"../components/Layout\";\nimport Router from 'next/router';\n\nconst Movies = ({\n  movies\n}) => {\n  // state\n  // const [movie, setmovie] = useState([])\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState('star wars');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const searchQuery2 = 'star wars'; // fetch movie - 함수는 마운트 될때 실행됨\n\n  const api_key = '224502cedb2aea2828098f3724fd0b0c';\n  const url = 'https://api.themoviedb.org/3/movie/550?api_key=224502cedb2aea2828098f3724fd0b0c';\n  const movieList = 'https://api.themoviedb.org/4/list/3?page=1&api_key=224502cedb2aea2828098f3724fd0b0c';\n  const imgUrl = 'https://image.tmdb.org/t/p/w300';\n  const searchUrl = `https://api.themoviedb.org/3/search/movie?query=${searchQuery2}&api_key=224502cedb2aea2828098f3724fd0b0c`;\n  const url2 = 'http://hn.algolia.com/api/v1/search?query=react';\n  const trandUrl = `https://api.themoviedb.org/3/trending/all/day?api_key=${api_key}`;\n  useEffect(() => {// fetchMovie();\n  }, []);\n\n  const showMovie = () => {\n    return (// <p>\n      //   { JSON.stringify(movies) }\n      //     { console.log(movies) }\n      // </p>\n      movies.map((item, i) => {\n        return __jsx(\"div\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }\n        }, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }\n        }, i, \". \", item.original_title), __jsx(\"img\", {\n          src: imgUrl + item.poster_path,\n          alt: item.poster_path,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }\n        }), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }\n        }, i, \". \", item.overview));\n      })\n    );\n  };\n\n  const searchMovie = () => {\n    return (// <p>\n      //   { JSON.stringify(movies) }\n      //     { console.log(movies) }\n      // </p>\n      movies.map((item, i) => {\n        return __jsx(\"div\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }\n        }, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }\n        }, i, \". \", item.original_title), __jsx(\"img\", {\n          src: imgUrl + item.poster_path,\n          alt: item.poster_path,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }\n        }), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        }, i, \". \", item.overview));\n      })\n    );\n  };\n\n  const handleTextChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    console.log('submit');\n    e.preventDefault();\n    Router.push(`./movies_ssr/?searchTerm=${searchQuery}`);\n  };\n\n  const searchForm = () => {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      onChange: handleTextChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return __jsx(Layout, {\n    title: \"Movies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"List of Movies\"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), searchForm(), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), showMovie()));\n}; // SSR(콘텐츠를 Server Side Rendering)\n\n\nMovies.getInitialProps = async ({\n  query\n}) => {\n  let movies;\n  const api_key = '224502cedb2aea2828098f3724fd0b0c';\n  const trandUrl = `https://api.themoviedb.org/3/trending/all/day?api_key=${api_key}`;\n  const searchUrl = `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=224502cedb2aea2828098f3724fd0b0c`;\n  let movie_url = trandUrl; // 검색(query) 요청이 없으면 기본 데이터 출력\n\n  if (!query.searchTerm) {\n    movie_url = trandUrl;\n  } else {\n    movie_url = searchUrl;\n  }\n\n  await fetch(movie_url).then(res => res.json()).then(data => {\n    movies = data; // console.log(movies)\n  }).catch(err => {\n    console.log(err);\n    movies = [];\n  });\n  return {\n    movies: movies.results\n  };\n};\n\nexport default Movies;","map":{"version":3,"sources":["/Users/yongh/Documents/web_dev/hello-next/pages/movies_ssr.js"],"names":["React","useState","useEffect","Link","Head","Layout","Router","Movies","movies","searchQuery","setSearchQuery","loading","setLoading","searchQuery2","api_key","url","movieList","imgUrl","searchUrl","url2","trandUrl","showMovie","map","item","i","original_title","poster_path","overview","searchMovie","handleTextChange","e","target","value","handleSubmit","console","log","preventDefault","push","searchForm","getInitialProps","query","movie_url","searchTerm","fetch","then","res","json","data","catch","err","results"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport Link from 'next/link';\nimport Head from \"next/head\";\nimport Layout from \"../components/Layout\";\nimport Router from 'next/router';\n\nconst Movies = ({movies}) => {\n  // state\n  // const [movie, setmovie] = useState([])\n  const [searchQuery, setSearchQuery] = useState('star wars')\n  const [loading, setLoading] = useState(false)\n  const searchQuery2 = 'star wars'\n\n  // fetch movie - 함수는 마운트 될때 실행됨\n  const api_key = '224502cedb2aea2828098f3724fd0b0c';\n  const url = 'https://api.themoviedb.org/3/movie/550?api_key=224502cedb2aea2828098f3724fd0b0c';\n  const movieList = 'https://api.themoviedb.org/4/list/3?page=1&api_key=224502cedb2aea2828098f3724fd0b0c'\n  const imgUrl = 'https://image.tmdb.org/t/p/w300'\n  const searchUrl = `https://api.themoviedb.org/3/search/movie?query=${searchQuery2}&api_key=224502cedb2aea2828098f3724fd0b0c`\n  const url2 = 'http://hn.algolia.com/api/v1/search?query=react'\n  const trandUrl = `https://api.themoviedb.org/3/trending/all/day?api_key=${api_key}`\n\n  useEffect(() => {\n    // fetchMovie();\n\n  }, []) \n\n  const showMovie = () => {\n    return (\n      // <p>\n      //   { JSON.stringify(movies) }\n      //     { console.log(movies) }\n      // </p>\n      movies.map((item, i) => {\n        return (\n          <div key={i}>\n            <p>{i}. {item.original_title}</p>\n            <img src={imgUrl+item.poster_path} alt={item.poster_path} />\n            <p>{i}. {item.overview}</p>\n          </div>\n        )\n      })\n\n    )\n  }\n\n  const searchMovie = () => {\n    return (\n      // <p>\n      //   { JSON.stringify(movies) }\n      //     { console.log(movies) }\n      // </p>\n      movies.map((item, i) => {\n        return (\n          <div key={i}>\n            <p>{i}. {item.original_title}</p>\n            <img src={imgUrl+item.poster_path} alt={item.poster_path} />\n            <p>{i}. {item.overview}</p>\n          </div>\n        )\n      })\n\n    )\n  }\n\n  const handleTextChange = (e) => {\n    setSearchQuery(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    console.log('submit')\n    e.preventDefault();\n    Router.push(`./movies_ssr/?searchTerm=${searchQuery}`)\n  }\n\n  const searchForm = () => {\n    return (\n      <form onSubmit={handleSubmit}>\n      <input type=\"text\" onChange={handleTextChange} />\n    </form>\n    )\n  }\n  \n  return (\n    <Layout title=\"Movies\">\n      <div>\n        <h2>List of Movies</h2>\n        <hr/>\n        {searchForm()}\n        <hr/>\n        { showMovie() }\n      </div>\n    </Layout>\n  )\n}\n\n\n// SSR(콘텐츠를 Server Side Rendering)\nMovies.getInitialProps = async ({query}) => {\n  let movies;\n  const api_key = '224502cedb2aea2828098f3724fd0b0c';\n  const trandUrl = `https://api.themoviedb.org/3/trending/all/day?api_key=${api_key}`\n  const searchUrl = `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=224502cedb2aea2828098f3724fd0b0c`\n  let movie_url = trandUrl;\n  \n  // 검색(query) 요청이 없으면 기본 데이터 출력\n  if(!query.searchTerm) {\n    movie_url = trandUrl;\n  } else {\n    movie_url = searchUrl;\n  }\n\n  await fetch(movie_url)\n    .then(res => res.json())\n    .then(data => {\n      movies = data;\n      // console.log(movies)\n    })\n    .catch(err => {\n      console.log(err)\n      movies = []\n    })\n\n  return { \n    movies: movies.results\n  }\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}