{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yongh/Documents/web_dev/hello-next/pages/movies_ssr.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Head from \"next/head\";\nimport Layout from \"../components/Layout\";\nimport Router from 'next/router';\n\nvar Movies = function Movies(_ref) {\n  _s();\n\n  var movies = _ref.movies;\n\n  // state\n  // const [movie, setmovie] = useState([])\n  var _useState = useState('star wars'),\n      searchQuery = _useState[0],\n      setSearchQuery = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var searchQuery2 = 'star wars'; // fetch movie - 함수는 마운트 될때 실행됨\n\n  var api_key = '224502cedb2aea2828098f3724fd0b0c';\n  var movieList = 'https://api.themoviedb.org/4/list/3?page=1&api_key=224502cedb2aea2828098f3724fd0b0c';\n  var imgUrl = 'https://image.tmdb.org/t/p/w300';\n  var searchUrl = \"https://api.themoviedb.org/3/search/movie?query=\".concat(searchQuery2, \"&api_key=224502cedb2aea2828098f3724fd0b0c\");\n  var trandUrl = \"https://api.themoviedb.org/3/trending/all/day?api_key=\".concat(api_key);\n  useEffect(function () {// showMovie();\n  }, []);\n\n  var showMovie = function showMovie() {\n    return (// <p>\n      //   { JSON.stringify(movies) }\n      //     { console.log(movies) }\n      // </p>\n      movies.map(function (item, i) {\n        return __jsx(\"div\", {\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        }, __jsx(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }\n        }, i, \". \", item.original_title), __jsx(\"img\", {\n          src: imgUrl + item.poster_path,\n          alt: item.poster_path,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }\n        }), __jsx(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }\n        }, i, \". \", item.overview));\n      })\n    );\n  };\n\n  var handleTextChange = function handleTextChange(e) {\n    setSearchQuery(e.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    console.log('submit');\n    e.preventDefault();\n    Router.push(\"./movies_ssr/?searchTerm=\".concat(searchQuery));\n  };\n\n  var searchForm = function searchForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      onChange: handleTextChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }), __jsx(\"button\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, \"Search\"));\n  };\n\n  return __jsx(Layout, {\n    title: \"Movies\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"List of Movies\"), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), searchForm(), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), showMovie()));\n}; // SSR(콘텐츠를 Server Side Rendering)\n\n\n_s(Movies, \"BmAserlm82aDkKKGUqpwTmsP8SM=\");\n\n_c = Movies;\n\nMovies.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query, movies, api_key, trandUrl, searchUrl, movie_url;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query;\n            api_key = '224502cedb2aea2828098f3724fd0b0c';\n            trandUrl = \"https://api.themoviedb.org/3/trending/all/day?api_key=\".concat(api_key);\n            searchUrl = \"https://api.themoviedb.org/3/search/movie?query=\".concat(query.searchTerm, \"&api_key=\").concat(api_key);\n            movie_url = trandUrl; // 검색(query) 요청이 없으면 기본 데이터 출력\n\n            if (query.searchTerm) {\n              movie_url = searchUrl;\n            } else {\n              movie_url = trandUrl;\n            }\n\n            _context.next = 8;\n            return fetch(movie_url).then(function (res) {\n              return res.json();\n            }).then(function (data) {\n              movies = data;\n              console.log(movies);\n            })[\"catch\"](function (err) {\n              console.log(err);\n              movies = [];\n            });\n\n          case 8:\n            return _context.abrupt(\"return\", {\n              movies: movies.results\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/yongh/Documents/web_dev/hello-next/pages/movies_ssr.js"],"names":["React","useState","useEffect","Link","Head","Layout","Router","Movies","movies","searchQuery","setSearchQuery","loading","setLoading","searchQuery2","api_key","movieList","imgUrl","searchUrl","trandUrl","showMovie","map","item","i","original_title","poster_path","overview","handleTextChange","e","target","value","handleSubmit","console","log","preventDefault","push","searchForm","getInitialProps","query","searchTerm","movie_url","fetch","then","res","json","data","err","results"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport Link from 'next/link';\nimport Head from \"next/head\";\nimport Layout from \"../components/Layout\";\nimport Router from 'next/router';\n\nconst Movies = ({movies}) => {\n  // state\n  // const [movie, setmovie] = useState([])\n  const [searchQuery, setSearchQuery] = useState('star wars')\n  const [loading, setLoading] = useState(false)\n  const searchQuery2 = 'star wars'\n\n  // fetch movie - 함수는 마운트 될때 실행됨\n  const api_key = '224502cedb2aea2828098f3724fd0b0c';\n  const movieList = 'https://api.themoviedb.org/4/list/3?page=1&api_key=224502cedb2aea2828098f3724fd0b0c'\n  const imgUrl = 'https://image.tmdb.org/t/p/w300'\n  const searchUrl = `https://api.themoviedb.org/3/search/movie?query=${searchQuery2}&api_key=224502cedb2aea2828098f3724fd0b0c`\n  const trandUrl = `https://api.themoviedb.org/3/trending/all/day?api_key=${api_key}`\n\n  useEffect(() => {\n    // showMovie();\n\n  }, []) \n\n  const showMovie = () => {\n    return (\n      // <p>\n      //   { JSON.stringify(movies) }\n      //     { console.log(movies) }\n      // </p>\n      movies.map((item, i) => {\n        return (\n          <div key={i}>\n            <p>{i}. {item.original_title}</p>\n            <img src={imgUrl+item.poster_path} alt={item.poster_path} />\n            <p>{i}. {item.overview}</p>\n          </div>\n        )\n      })\n\n    )\n  }\n\n  const handleTextChange = (e) => {\n    setSearchQuery(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    console.log('submit')\n    e.preventDefault();\n    Router.push(`./movies_ssr/?searchTerm=${searchQuery}`)\n  }\n\n  const searchForm = () => {\n    return (\n      <form onSubmit={handleSubmit}>\n      <input type=\"text\" onChange={handleTextChange} />\n      <button>Search</button>\n    </form>\n    )\n  }\n  \n  return (\n    <Layout title=\"Movies\">\n      <div>\n        <h2>List of Movies</h2>\n        <hr/>\n        { searchForm() }\n        <hr/>\n        { showMovie() }\n      </div>\n    </Layout>\n  )\n}\n\n\n// SSR(콘텐츠를 Server Side Rendering)\nMovies.getInitialProps = async ({query}) => {\n  let movies;\n  const api_key = '224502cedb2aea2828098f3724fd0b0c';\n  const trandUrl = `https://api.themoviedb.org/3/trending/all/day?api_key=${api_key}`\n  const searchUrl = `https://api.themoviedb.org/3/search/movie?query=${query.searchTerm}&api_key=${api_key}`\n  let movie_url = trandUrl;\n  \n  // 검색(query) 요청이 없으면 기본 데이터 출력\n  if(query.searchTerm) {\n    movie_url = searchUrl;\n  } else {\n    movie_url = trandUrl;\n  }\n\n  await fetch(movie_url)\n    .then(res => res.json())\n    .then(data => {\n      movies = data;\n      console.log(movies)\n    })\n    .catch(err => {\n      console.log(err)\n      movies = []\n    })\n\n  return { \n    movies: movies.results\n  }\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}